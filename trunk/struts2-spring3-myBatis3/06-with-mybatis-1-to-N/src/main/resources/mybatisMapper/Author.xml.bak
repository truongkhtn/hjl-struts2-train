<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--命名空间-->
<mapper namespace="cn.com.oceansoft.struts2.dao.Author">

    <!--使用缓存-->
    <cache/>

    <!--定义一个可以重用的 sql 语段-->
    <sql id="authorColumns"> author_id,author_name,email </sql>

    <!--select 查询 -->
    <!--getById-->
    <resultMap id="authorResultMap"
               type="cn.com.oceansoft.struts2.entity.Author">
        <id property="authorId" column="author_id"/>
        <result property="authorName" column="author_name"/>
        <result property="email" column="email"/>
    </resultMap>
    <select id="getById" parameterType="string" resultMap="authorResultMap">
        select
        <include refid="authorColumns"/>
        from tbl_author where author_id = #{id};
    </select>

    <!--getAuthorBlogLinkedById-->
    <resultMap id="getAuthorBlogLinkedByIdResult"
               type="cn.com.oceansoft.struts2.entity.AuthorBlogLinked">
        <association property="author" column="a.author_id"
                     javaType="cn.com.oceansoft.struts2.entity.Author"
                     resultMap="authorResultMap">
        </association>
        <collection property="blogList"
                    ofType="java.util.List"
                    select="selectBlogById"
                    column="author_id">
        </collection>
    </resultMap>

    <resultMap id="blogResultMap" type="cn.com.oceansoft.struts2.entity.Blog">
        <id property="blogId" column="blog_id"/>
        <result property="blogName" column="blog_name"/>
        <result property="content" column="content"/>
        <result property="createdDate" column="created"/>
        <result property="lastModifyDate" column="last_modify"/>
    </resultMap>

    <!--存在N+1问题-->
    <select id="getAuthorBlogLinkedById" parameterType="string"
            resultMap="getAuthorBlogLinkedByIdResult">
          select * from tbl_author where author_id = #{id};
    </select>

    <!--存在N+1问题-->
    <select id="getAllAuthorBlogLinked" resultMap="getAuthorBlogLinkedByIdResult">
          select * from tbl_author;
    </select>

    <!--解决N+1问题-->
    <resultMap id="getAllAuthorBlogLinkedResult2"
               type="cn.com.oceansoft.struts2.entity.AuthorBlogLinked">
        <association property="author" column="a.author_id"
                     javaType="cn.com.oceansoft.struts2.entity.Author"
                     resultMap="authorResultMap">
        </association>
        <collection property="blogList"
                    ofType="java.util.List"
                    resultMap="blogResultMap"
                    column="author_id">
        </collection>
    </resultMap>

    <select id="getAllAuthorBlogLinked2" resultMap="getAllAuthorBlogLinkedResult2">
        select
            a.author_id, a.author_name, a.email,
            b.blog_id, b.blog_name, b.content, b.created, b.last_modify
        from tbl_author as a
        LEFT JOIN
            tbl_blog as b
        ON
            a.author_id = b.author_id;
    </select>


    <!--<select id="getAuthorBlogLinkedById" parameterType="string"
            resultMap="getAuthorBlogLinkedByIdResult">
        select
          a.author_id, a.author_name, a.email,
          b.blog_id, b.blog_name, b.content, b.created, b.last_modify
        from
          tbl_author as a
        left join
          tbl_blog as b
        on
          a.author_id = b.author_id
        where
          a.author_id = #{id};
    </select>-->


</mapper>