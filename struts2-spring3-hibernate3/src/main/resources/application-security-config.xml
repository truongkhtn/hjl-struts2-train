<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <!-- 未登录的切入点 -->
    <beans:bean id="authenticationProcessingFilterEntryPoint"
                class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <beans:property name="loginFormUrl" value="/login.html"></beans:property>
    </beans:bean>

    <!-- url 访问权限 -->
    <http auto-config="false" use-expressions="true" entry-point-ref="authenticationProcessingFilterEntryPoint">

        <!--未登录可访问-->
        <intercept-url pattern="/*.html" access="permitAll"/>
        <intercept-url pattern="/html/*" access="permitAll"/>
        <intercept-url pattern="/images/*" access="permitAll"/>
        <intercept-url pattern="/js/*" access="permitAll"/>
        <intercept-url pattern="/styles/*" access="permitAll"/>
        <intercept-url pattern="/user/register.action" access="permitAll"/>
        <intercept-url pattern="/user/initRegister.action" access="permitAll"/>
        <intercept-url pattern="/jsp/user/register.jsp" access="permitAll"/>

        <!--登录授权可访问-->
        <intercept-url pattern="/**" access="isAuthenticated()"/>
        <!-- logout 跳转 url -->
        <logout invalidate-session="true" logout-success-url="/login.html"/>

        <!-- session 控制 -->
        <custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter"/>

        <custom-filter ref="loginFilter" position="FORM_LOGIN_FILTER"/>
        <custom-filter ref="mySecurityFilter" before="FILTER_SECURITY_INTERCEPTOR"/>

        <session-management
                session-authentication-error-url="/sessionAuthenticationError.html"
                invalid-session-url="/html/sessionExpired.html"
                session-authentication-strategy-ref="sas">
        </session-management>
    </http>

    <!-- session 失效控制 -->
    <beans:bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <beans:property name="sessionRegistry" ref="sessionRegistry"/>
        <beans:property name="expiredUrl" value="/html/sessionExpired.html"/>
    </beans:bean>

    <!--</beans:bean>-->
    <beans:bean id="sas"
                class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
        <beans:constructor-arg name="sessionRegistry" ref="sessionRegistry"/>
        <beans:property name="maximumSessions" value="1"/>
        <!--true:第二次登陆会失败，除非第一次登陆失效 -->
        <!--false:第二次登陆会踢掉第一次登陆-->
        <beans:property name="exceptionIfMaximumExceeded" value="false"/>
    </beans:bean>
    <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl"/>

    <!-- 登录验证器 -->
    <beans:bean id="loginFilter"
                class="com.company.travel.filter.MyUsernamePasswordAuthenticationFilter">
        <!-- 处理登录的action -->
        <beans:property name="filterProcessesUrl" value="/loginVerify"></beans:property>
        <!-- 验证成功后的处理-->
        <beans:property name="authenticationSuccessHandler" ref="customAuthenticationSuccessHandler"></beans:property>
        <!-- 验证失败后的处理-->
        <beans:property name="authenticationFailureHandler" ref="customAuthenticationFailureHandler"></beans:property>
        <beans:property name="authenticationManager" ref="myAuthenticationManager"></beans:property>
    </beans:bean>

    <!-- 配置过滤器 -->
    <beans:bean id="mySecurityFilter" class="com.company.travel.filter.MySecurityFilter">
        <!-- 用户拥有的权限 -->
        <beans:property name="authenticationManager" ref="myAuthenticationManager"/>
        <!-- 用户是否拥有所请求资源的权限 -->
        <beans:property name="accessDecisionManager" ref="myAccessDecisionManager"/>
        <!-- 资源与权限对应关系 -->
        <beans:property name="securityMetadataSource" ref="mySecurityMetadataSource"/>
    </beans:bean>

    <beans:bean id="myAccessDecisionManager" class="com.company.travel.filter.MyAccessDecisionManager"/>
    <beans:bean id="mySecurityMetadataSource" class="com.company.travel.filter.MySecurityMetadataSource"/>

    <!-- 实现了UserDetailsService的Bean -->
    <beans:bean id="userDetailService"
                class="com.company.travel.filter.MyUserDetailsService"/>

    <!-- 后台管理权限认证 -->
    <authentication-manager alias="myAuthenticationManager">
        <!--定义认证提供接口  -->
        <authentication-provider user-service-ref="userDetailService">
            <!--定义密码加密算法  -->
            <!--<password-encoder ref="passwordEncoder">
                   &lt;!&ndash;定义密码字元，增加密码的安全性  &ndash;&gt;
                   <salt-source ref="saltSource"/>
                  </password-encoder>    -->
        </authentication-provider>
    </authentication-manager>

    <!--自定义 AuthenticationSuccessHandler-->
    <beans:bean id="customAuthenticationSuccessHandler"
                class="com.company.travel.utils.CustomAuthenticationSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/route/list.action"/>
        <beans:property name="alwaysUseDefaultTargetUrl" value="true"/>
    </beans:bean>

    <!--自定义AuthenticationFailureHandler-->
    <beans:bean id="customAuthenticationFailureHandler"
                class="com.company.travel.utils.CustomAuthenticationFailureHandler">
        <!--密码错误-->
        <beans:property name="passwordFailureUrl" value="/failed.html"/>
        <!--账号禁用-->
        <beans:property name="accountDisabledUrl" value="/html/accountDisabled.html"/>
        <!--账号过期-->
        <beans:property name="accountExpiredUrl" value="/html/accountExpired.html"/>
        <!--账号锁定-->
        <beans:property name="accountLockedUrl" value="/html/accountLocked.html"/>
        <!--账号凭证过期-->
        <beans:property name="credentialsExpiredUrl" value="/html/credentialsExpired.html"/>
        <!--最大密码输入错误次数, 否则账号锁定-->
        <beans:property name="maxLoginFailureCount" value="5"/>
    </beans:bean>

    <!--处理所有 AccessDeniedException 和 AuthenticationException，实际运行看出不效果??? -->
    <!--exceptionTranslationFilter-->
    <beans:bean id="exceptionTranslationFilter"
                class="org.springframework.security.web.access.ExceptionTranslationFilter">
        <beans:property name="authenticationEntryPoint" ref="authenticationProcessingFilterEntryPoint"/>
        <beans:property name="accessDeniedHandler" ref="accessDeniedHandler"/>
    </beans:bean>

    <beans:bean id="accessDeniedHandler"
                class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
        <beans:property name="errorPage" value="/html/accessDenied.html"/>
    </beans:bean>

</beans:beans>